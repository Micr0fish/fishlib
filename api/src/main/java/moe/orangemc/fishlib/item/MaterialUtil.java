/*
 * FishLib, a Bukkit development library
 * Copyright (C) Astro angelfish
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package moe.orangemc.fishlib.item;

import moe.orangemc.fishlib.annotation.ShouldNotBeImplemented;

import org.bukkit.Material;
import org.bukkit.NamespacedKey;
import org.bukkit.Sound;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * Material helper.
 */
@ShouldNotBeImplemented
public final class MaterialUtil {
	private static final Map<NamespacedKey, Material> BY_KEY = new ConcurrentHashMap<>();
	private MaterialUtil() {
		throw new AssertionError("Well you can not access this.");
	}

    /**
     * Check if the material is liquid.
     * @param material The material to be checked.
     * @return true if this material is liquid.
     */
    public static boolean isLiquid(Material material) {
		return switch(material) {
			case WATER, LAVA -> true;
			default -> false;
		};
    }

    /**
     * Check if entities can walk through this material.
     * @param material The material to be checked.
     * @return true if entities can walk through this material.
     */
    public static boolean canWalkThrough(Material material) {
	    return switch (material) {
		    // <editor-fold defaultstate="collapsed" desc="canWalkThrough">
		    case ACACIA_BUTTON, ACACIA_SAPLING, ACACIA_SIGN, ACACIA_WALL_SIGN, ACTIVATOR_RAIL, AIR, ALLIUM, ATTACHED_MELON_STEM, ATTACHED_PUMPKIN_STEM, AZURE_BLUET, BAMBOO_SAPLING, BEETROOTS, BIRCH_BUTTON, BIRCH_SAPLING, BIRCH_SIGN, BIRCH_WALL_SIGN, BLACK_BANNER, BLACK_WALL_BANNER, BLUE_BANNER, BLUE_ORCHID, BLUE_WALL_BANNER, BRAIN_CORAL_FAN, BRAIN_CORAL_WALL_FAN, BROWN_BANNER, BROWN_MUSHROOM, BROWN_WALL_BANNER, BUBBLE_CORAL_FAN, BUBBLE_CORAL_WALL_FAN, CARROTS, CAVE_AIR, CORNFLOWER, CYAN_BANNER, CYAN_WALL_BANNER, DANDELION, DEAD_BRAIN_CORAL_FAN, DEAD_BRAIN_CORAL_WALL_FAN, DEAD_FIRE_CORAL_FAN, DEAD_FIRE_CORAL_WALL_FAN, DEAD_BUBBLE_CORAL_FAN, DEAD_BUBBLE_CORAL_WALL_FAN, DEAD_HORN_CORAL_FAN, DEAD_HORN_CORAL_WALL_FAN, DEAD_TUBE_CORAL_FAN, DEAD_TUBE_CORAL_WALL_FAN, DETECTOR_RAIL, FERN, GRASS, GRAY_BANNER, GRAY_WALL_BANNER, GREEN_BANNER, GREEN_WALL_BANNER, HORN_CORAL_FAN, HORN_CORAL_WALL_FAN, JUNGLE_BUTTON, JUNGLE_SAPLING, JUNGLE_SIGN, JUNGLE_WALL_SIGN, KELP_PLANT, LIGHT_BLUE_BANNER, LIGHT_BLUE_WALL_BANNER, LIGHT_GRAY_BANNER, LEVER, LIGHT_GRAY_WALL_BANNER, MAGENTA_BANNER, MAGENTA_WALL_BANNER, MOVING_PISTON, OAK_BUTTON, OAK_SAPLING, OAK_SIGN, OAK_WALL_SIGN, ORANGE_BANNER, ORANGE_TULIP, ORANGE_WALL_BANNER, PEONY, PINK_BANNER, PINK_TULIP, PINK_WALL_BANNER, RAIL, RED_BANNER, RED_MUSHROOM, RED_TULIP, RED_WALL_BANNER, SCAFFOLDING, SEAGRASS, SPRUCE_SAPLING, SPRUCE_SIGN, SPRUCE_WALL_SIGN, SPRUCE_BUTTON, TALL_GRASS, TALL_SEAGRASS, TUBE_CORAL_FAN, TUBE_CORAL_WALL_FAN, VINE, VOID_AIR, WALL_TORCH, TORCH, YELLOW_BANNER, YELLOW_WALL_BANNER, STONE_BUTTON, FIRE_CORAL_FAN, FIRE_CORAL_WALL_FAN ->
				    // </editor-fold>
				    true;
		    default -> false;
	    };
    }

    /**
     * Check if this material can make up restone circuits.
     * @param material The material to be checked.
     * @return true if this material can make up redstone circuits.
     */
    public static boolean isRedstoneBlock(Material material) {
	    return switch (material) {
		    // <editor-fold defaultstate="collapsed" desc="isRedstoneBlock">
		    case REDSTONE_WIRE, REDSTONE_WALL_TORCH, REDSTONE_LAMP, OBSERVER, PISTON, PISTON_HEAD, SLIME_BLOCK, HONEY_BLOCK, STICKY_PISTON, ACACIA_BUTTON, BIRCH_BUTTON, DARK_OAK_BUTTON, JUNGLE_BUTTON, OAK_BUTTON, SPRUCE_BUTTON, STONE_BUTTON, REPEATER, COMPARATOR, TNT, POWERED_RAIL, DETECTOR_RAIL, DAYLIGHT_DETECTOR, DROPPER, DISPENSER, HOPPER, TRIPWIRE, TRIPWIRE_HOOK ->
				    // </editor-fold>
				    true;
		    default -> false;
	    };
    }

    /**
     * Check if this material can replaced by water or lava
     * @param material the material to be checked
     * @return true if this material can replaced by liquid
     */
    public static boolean canReplacedByLiquid(Material material) {
	    return switch (material) {
		    // <editor-fold defaultstate="collapsed" desc="canReplaceByLiquid">
		    case AIR, CAVE_AIR, BLACK_CARPET, BLUE_CARPET, BROWN_CARPET, CYAN_CARPET, GRAY_CARPET, GREEN_CARPET, LIGHT_BLUE_CARPET, LIGHT_GRAY_CARPET, LIME_CARPET, MAGENTA_CARPET, ORANGE_CARPET, PINK_CARPET, PURPLE_CARPET, RED_CARPET, WHITE_CARPET, YELLOW_CARPET, ROSE_BUSH, DANDELION, CORNFLOWER, TORCH, STONE_BUTTON, ACACIA_BUTTON, BIRCH_BUTTON, DARK_OAK_BUTTON, JUNGLE_BUTTON, OAK_BUTTON, SPRUCE_BUTTON, ORANGE_TULIP, PINK_TULIP, POTTED_ORANGE_TULIP, POTTED_PINK_TULIP, POTTED_RED_TULIP, POTTED_WHITE_TULIP, RED_TULIP, WHITE_TULIP, POTTED_ACACIA_SAPLING, POTTED_ALLIUM, POTTED_AZURE_BLUET, POTTED_BAMBOO, POTTED_BIRCH_SAPLING, POTTED_BLUE_ORCHID, POTTED_BROWN_MUSHROOM, POTTED_CACTUS, POTTED_CORNFLOWER, POTTED_DANDELION, POTTED_DARK_OAK_SAPLING, POTTED_DEAD_BUSH, POTTED_FERN, POTTED_JUNGLE_SAPLING, POTTED_LILY_OF_THE_VALLEY, POTTED_OAK_SAPLING, POTTED_OXEYE_DAISY, POTTED_POPPY, POTTED_RED_MUSHROOM, POTTED_SPRUCE_SAPLING, POTTED_WITHER_ROSE, ACACIA_SAPLING, BAMBOO_SAPLING, BIRCH_SAPLING, DARK_OAK_SAPLING, JUNGLE_SAPLING, OAK_SAPLING, SPRUCE_SAPLING, AZURE_BLUET, ALLIUM, DEAD_BUSH, FERN, LARGE_FERN, LILY_OF_THE_VALLEY, LILY_PAD, OXEYE_DAISY, POPPY, BROWN_MUSHROOM, RED_MUSHROOM, WITHER_ROSE, TALL_GRASS, SUNFLOWER, LILAC, PEONY, CREEPER_HEAD, CREEPER_WALL_HEAD, DRAGON_HEAD, DRAGON_WALL_HEAD, PLAYER_HEAD, PLAYER_WALL_HEAD, ZOMBIE_HEAD, ZOMBIE_WALL_HEAD, SKELETON_SKULL, SKELETON_WALL_SKULL, WITHER_SKELETON_SKULL, WITHER_SKELETON_WALL_SKULL, WHEAT, CARROTS, POTATOES, BEETROOTS, SWEET_BERRY_BUSH, REDSTONE_TORCH, REDSTONE_WIRE, LEVER, COMPARATOR, REPEATER, TRIPWIRE_HOOK, TRIPWIRE, RAIL, ACTIVATOR_RAIL, DETECTOR_RAIL, POWERED_RAIL, COBWEB, NETHER_WART, ATTACHED_MELON_STEM, ATTACHED_PUMPKIN_STEM, MELON_STEM, PUMPKIN_STEM, COCOA, END_ROD, SNOW, VINE ->
				    // </editor-fold>
				    true;
		    default -> false;
	    };
    }

	/**
	 * Get the material by key.
	 * @param key the key of the material.
	 * @return the material.
	 */
	public static Material getMaterial(NamespacedKey key) {
		return BY_KEY.get(key);
	}

	/**
	 * Get the place sound of material
	 * @param material the place sound of material
	 * @return the place sound of material
	 */
	public static Sound getPlaceSound(Material material) {
		return switch (material) {
			case AMETHYST_BLOCK, AMETHYST_SHARD -> Sound.BLOCK_AMETHYST_BLOCK_PLACE;
			case AMETHYST_CLUSTER -> Sound.BLOCK_AMETHYST_CLUSTER_PLACE;
			case ANCIENT_DEBRIS -> Sound.BLOCK_ANCIENT_DEBRIS_PLACE;
			case ANVIL, BELL, CHIPPED_ANVIL, DAMAGED_ANVIL -> Sound.BLOCK_ANVIL_PLACE;
			case AZALEA -> Sound.BLOCK_AZALEA_PLACE;
			case AZALEA_LEAVES, FLOWERING_AZALEA_LEAVES -> Sound.BLOCK_AZALEA_LEAVES_PLACE;
			case BAMBOO -> Sound.BLOCK_BAMBOO_PLACE;
			case BAMBOO_SAPLING -> Sound.BLOCK_BAMBOO_SAPLING_PLACE;
			// <editor-fold defaultstate="collapsed" desc="bamboo">
			case BAMBOO_BLOCK, BAMBOO_BUTTON, BAMBOO_DOOR, BAMBOO_FENCE, BAMBOO_FENCE_GATE, BAMBOO_MOSAIC, BAMBOO_MOSAIC_SLAB, BAMBOO_MOSAIC_STAIRS, BAMBOO_PLANKS, BAMBOO_PRESSURE_PLATE, BAMBOO_SIGN, BAMBOO_SLAB, BAMBOO_STAIRS, BAMBOO_TRAPDOOR, BAMBOO_WALL_SIGN, STRIPPED_BAMBOO_BLOCK ->
					// </editor-fold>
					Sound.BLOCK_BAMBOO_WOOD_PLACE;
			case BAMBOO_HANGING_SIGN, BAMBOO_WALL_HANGING_SIGN -> Sound.BLOCK_BAMBOO_WOOD_HANGING_SIGN_PLACE;
			case BASALT, POLISHED_BASALT, SMOOTH_BASALT -> Sound.BLOCK_BASALT_PLACE;
			case BIG_DRIPLEAF, BIG_DRIPLEAF_STEM -> Sound.BLOCK_BIG_DRIPLEAF_PLACE;
			case BONE_BLOCK -> Sound.BLOCK_BONE_BLOCK_PLACE;
			case CALCITE -> Sound.BLOCK_CALCITE_PLACE;
			// <editor-fold defaultstate="collapsed" desc="candles">
			case CANDLE, BLACK_CANDLE, BLUE_CANDLE, BROWN_CANDLE, CYAN_CANDLE, GRAY_CANDLE, GREEN_CANDLE, LIGHT_BLUE_CANDLE, LIGHT_GRAY_CANDLE, LIME_CANDLE, MAGENTA_CANDLE, ORANGE_CANDLE, PINK_CANDLE, PURPLE_CANDLE, RED_CANDLE, WHITE_CANDLE, YELLOW_CANDLE ->
					// </editor-fold>
					Sound.BLOCK_CANDLE_PLACE;
			case CAVE_VINES, CAVE_VINES_PLANT -> Sound.BLOCK_CAVE_VINES_PLACE;
			case CHAIN -> Sound.BLOCK_CHAIN_PLACE;
			case CHERRY_LEAVES -> Sound.BLOCK_CHERRY_LEAVES_PLACE;
			case CHERRY_SAPLING -> Sound.BLOCK_CHERRY_SAPLING_PLACE;
			case CHERRY_WOOD -> Sound.BLOCK_CHERRY_WOOD_PLACE;
			case CHERRY_HANGING_SIGN, CHERRY_WALL_HANGING_SIGN -> Sound.BLOCK_CHERRY_WOOD_HANGING_SIGN_PLACE;
			case CHISELED_BOOKSHELF -> Sound.BLOCK_CHISELED_BOOKSHELF_PLACE;
			// <editor-fold defaultstate="collapsed" desc="copper">
			case COPPER_BLOCK, CUT_COPPER, CUT_COPPER_SLAB, CUT_COPPER_STAIRS, EXPOSED_COPPER, EXPOSED_CUT_COPPER, EXPOSED_CUT_COPPER_SLAB, EXPOSED_CUT_COPPER_STAIRS, WEATHERED_COPPER, WEATHERED_CUT_COPPER, WEATHERED_CUT_COPPER_SLAB, WEATHERED_CUT_COPPER_STAIRS, OXIDIZED_COPPER, OXIDIZED_CUT_COPPER, OXIDIZED_CUT_COPPER_SLAB, OXIDIZED_CUT_COPPER_STAIRS, WAXED_CUT_COPPER, WAXED_EXPOSED_CUT_COPPER_SLAB, WAXED_COPPER_BLOCK, WAXED_CUT_COPPER_SLAB, WAXED_EXPOSED_COPPER, WAXED_CUT_COPPER_STAIRS, WAXED_EXPOSED_CUT_COPPER, WAXED_EXPOSED_CUT_COPPER_STAIRS, WAXED_OXIDIZED_COPPER, WAXED_OXIDIZED_CUT_COPPER_SLAB, WAXED_OXIDIZED_CUT_COPPER, WAXED_OXIDIZED_CUT_COPPER_STAIRS, WAXED_WEATHERED_COPPER, WAXED_WEATHERED_CUT_COPPER_SLAB, WAXED_WEATHERED_CUT_COPPER, WAXED_WEATHERED_CUT_COPPER_STAIRS, LIGHTNING_ROD ->
					// </editor-fold>
					Sound.BLOCK_COPPER_PLACE;
			// <editor-fold defaultstate="collapsed" desc="coralBlock">
			case BRAIN_CORAL_BLOCK, BUBBLE_CORAL_BLOCK, FIRE_CORAL_BLOCK, HORN_CORAL_BLOCK, TUBE_CORAL_BLOCK, HONEYCOMB_BLOCK ->
					// </editor-fold>
					Sound.BLOCK_CORAL_BLOCK_PLACE;
			case BEETROOTS, CARROTS, PITCHER_POD, PITCHER_CROP, POTATOES, TORCHFLOWER_CROP, WHEAT -> Sound.ITEM_CROP_PLANT;
			case DECORATED_POT -> Sound.BLOCK_DECORATED_POT_PLACE;
			// <editor-fold defaultstate="collapsed" desc="deepslate">
			case COBBLED_DEEPSLATE, COBBLED_DEEPSLATE_SLAB, COBBLED_DEEPSLATE_STAIRS, COBBLED_DEEPSLATE_WALL, DEEPSLATE, DEEPSLATE_COAL_ORE, DEEPSLATE_COPPER_ORE, DEEPSLATE_DIAMOND_ORE, DEEPSLATE_EMERALD_ORE, DEEPSLATE_GOLD_ORE, REINFORCED_DEEPSLATE ->
					// </editor-fold>
					Sound.BLOCK_DEEPSLATE_PLACE;
			case CHISELED_DEEPSLATE, CRACKED_DEEPSLATE_BRICKS, DEEPSLATE_BRICKS -> Sound.BLOCK_DEEPSLATE_BRICKS_PLACE;
			case DEEPSLATE_TILES, CRACKED_DEEPSLATE_TILES, DEEPSLATE_TILE_SLAB, DEEPSLATE_TILE_STAIRS, DEEPSLATE_TILE_WALL ->
					Sound.BLOCK_DEEPSLATE_TILES_PLACE;
			case DRIPSTONE_BLOCK -> Sound.BLOCK_DRIPSTONE_BLOCK_PLACE;
			case FLOWERING_AZALEA -> Sound.BLOCK_FLOWERING_AZALEA_PLACE;
			case OCHRE_FROGLIGHT, PEARLESCENT_FROGLIGHT, VERDANT_FROGLIGHT -> Sound.BLOCK_FROGLIGHT_PLACE;
			case FROGSPAWN -> Sound.BLOCK_FROGSPAWN_PLACE;
			case CRIMSON_FUNGUS, WARPED_FUNGUS -> Sound.BLOCK_FUNGUS_PLACE;
			case GILDED_BLACKSTONE -> Sound.BLOCK_GILDED_BLACKSTONE_PLACE;
			// <editor-fold defaultstate="collapsed" desc="glass">
			case BLACK_STAINED_GLASS, GLASS, BLACK_STAINED_GLASS_PANE, BROWN_STAINED_GLASS, GREEN_STAINED_GLASS, BLUE_STAINED_GLASS, BLUE_STAINED_GLASS_PANE, BROWN_STAINED_GLASS_PANE, CYAN_STAINED_GLASS, CYAN_STAINED_GLASS_PANE, GRAY_STAINED_GLASS, GRAY_STAINED_GLASS_PANE, GREEN_STAINED_GLASS_PANE, LIGHT_BLUE_STAINED_GLASS, LIGHT_BLUE_STAINED_GLASS_PANE, LIGHT_GRAY_STAINED_GLASS, LIGHT_GRAY_STAINED_GLASS_PANE, LIME_STAINED_GLASS, LIME_STAINED_GLASS_PANE, MAGENTA_STAINED_GLASS, MAGENTA_STAINED_GLASS_PANE, ORANGE_STAINED_GLASS, ORANGE_STAINED_GLASS_PANE, PINK_STAINED_GLASS, PINK_STAINED_GLASS_PANE, PURPLE_STAINED_GLASS, PURPLE_STAINED_GLASS_PANE, RED_STAINED_GLASS, RED_STAINED_GLASS_PANE, WHITE_STAINED_GLASS, WHITE_STAINED_GLASS_PANE, YELLOW_STAINED_GLASS, YELLOW_STAINED_GLASS_PANE, ICE, BLUE_ICE, FROSTED_ICE, PACKED_ICE, GLASS_PANE, GLOWSTONE, NETHER_PORTAL, REDSTONE_LAMP, SEA_LANTERN, TINTED_GLASS ->
					// </editor-fold>
					Sound.BLOCK_GLASS_PLACE;
			// <editor-fold defaultstate="collapsed" desc="grass">
			case GLOW_LICHEN, ACACIA_LEAVES, BIRCH_LEAVES, DARK_OAK_LEAVES, JUNGLE_LEAVES, MANGROVE_LEAVES, OAK_LEAVES, SPRUCE_LEAVES, SPRUCE_SAPLING, ACACIA_SAPLING, BIRCH_SAPLING, DARK_OAK_SAPLING, JUNGLE_SAPLING, OAK_SAPLING, BROWN_MUSHROOM, RED_MUSHROOM, DRIED_KELP_BLOCK, GRASS, GRASS_BLOCK, LARGE_FERN, FERN, DEAD_BUSH, DIRT_PATH, HAY_BLOCK, MANGROVE_PROPAGULE, MYCELIUM, SUGAR_CANE, TARGET, TNT, DANDELION, POPPY, BLUE_ORCHID, ALLIUM, AZURE_BLUET, RED_TULIP, WHITE_TULIP, ORANGE_TULIP, PINK_TULIP, OXEYE_DAISY, CORNFLOWER, LILY_OF_THE_VALLEY, WITHER_ROSE, TORCHFLOWER, SUNFLOWER, LILAC, ROSE_BUSH, PEONY, PITCHER_PLANT ->
					// </editor-fold>
					Sound.BLOCK_GRASS_PLACE;
			case CLAY, COARSE_DIRT, DIRT, FARMLAND, GRAVEL, PODZOL -> Sound.BLOCK_GRAVEL_PLACE;
			case HANGING_ROOTS -> Sound.BLOCK_HANGING_ROOTS_PLACE;
			// <editor-fold defaultstate="collapsed" desc="hangingSign">
			case ACACIA_HANGING_SIGN, ACACIA_WALL_HANGING_SIGN, BIRCH_HANGING_SIGN, BIRCH_WALL_HANGING_SIGN, JUNGLE_HANGING_SIGN, OAK_HANGING_SIGN, MANGROVE_HANGING_SIGN, DARK_OAK_HANGING_SIGN, JUNGLE_WALL_HANGING_SIGN, DARK_OAK_WALL_HANGING_SIGN, OAK_WALL_HANGING_SIGN, SPRUCE_HANGING_SIGN, SPRUCE_WALL_HANGING_SIGN ->
					// </editor-fold>
					Sound.BLOCK_HANGING_SIGN_PLACE;
			case MELON_STEM, PUMPKIN_STEM, CRIMSON_HYPHAE, STRIPPED_CRIMSON_HYPHAE, STRIPPED_WARPED_HYPHAE, WARPED_HYPHAE, STRIPPED_CRIMSON_STEM, STRIPPED_WARPED_STEM, CRIMSON_STEM, WARPED_STEM -> Sound.BLOCK_STEM_PLACE;
			case HONEY_BLOCK -> Sound.BLOCK_HONEY_BLOCK_PLACE;
			case LADDER -> Sound.BLOCK_LADDER_PLACE;
			case LANTERN, SOUL_LANTERN -> Sound.BLOCK_LANTERN_PLACE;
			case LILY_PAD -> Sound.BLOCK_LILY_PAD_PLACE;
			case LODESTONE -> Sound.BLOCK_LODESTONE_PLACE;
			case MANGROVE_ROOTS -> Sound.BLOCK_MANGROVE_ROOTS_PLACE;
			case MEDIUM_AMETHYST_BUD -> Sound.BLOCK_LARGE_AMETHYST_BUD_PLACE; // https://bugs.mojang.com/browse/MC-248223
			case LARGE_AMETHYST_BUD -> Sound.BLOCK_MEDIUM_AMETHYST_BUD_PLACE; // same
			// <editor-fold defaultstate="collapsed" desc="metal">
			case ACTIVATOR_RAIL, DETECTOR_RAIL, DIAMOND_BLOCK, EMERALD_BLOCK, GOLD_BLOCK, HEAVY_WEIGHTED_PRESSURE_PLATE, LIGHT_WEIGHTED_PRESSURE_PLATE, HOPPER, IRON_BARS, IRON_BLOCK, IRON_DOOR, IRON_TRAPDOOR, POWERED_RAIL, RAIL, REDSTONE_BLOCK, SNIFFER_EGG, SPAWNER, TURTLE_EGG ->
					// </editor-fold>
					Sound.BLOCK_METAL_PLACE;
			case MOSS_BLOCK -> Sound.BLOCK_MOSS_PLACE;
			case MOSS_CARPET -> Sound.BLOCK_MOSS_CARPET_PLACE;
			case MUD -> Sound.BLOCK_MUD_PLACE;
			case MUDDY_MANGROVE_ROOTS -> Sound.BLOCK_MUDDY_MANGROVE_ROOTS_PLACE;
			case MUD_BRICK_SLAB, MUD_BRICKS, MUD_BRICK_STAIRS, MUD_BRICK_WALL -> Sound.BLOCK_MUD_BRICKS_PLACE;
			case NETHERITE_BLOCK -> Sound.BLOCK_NETHERITE_BLOCK_PLACE;
			case NETHERRACK -> Sound.BLOCK_NETHERRACK_PLACE;
			// <editor-fold defaultstate="collapsed" desc="netherBrick">
			case NETHER_BRICK, NETHER_BRICKS, NETHER_BRICK_FENCE, NETHER_BRICK_SLAB, NETHER_BRICK_STAIRS, NETHER_BRICK_WALL, CHISELED_NETHER_BRICKS, CRACKED_NETHER_BRICKS, RED_NETHER_BRICK_SLAB, RED_NETHER_BRICKS, RED_NETHER_BRICK_STAIRS, RED_NETHER_BRICK_WALL ->
					// </editor-fold>
					Sound.BLOCK_NETHER_BRICKS_PLACE;
			case NETHER_GOLD_ORE -> Sound.BLOCK_NETHER_GOLD_ORE_PLACE;
			case NETHER_QUARTZ_ORE -> Sound.BLOCK_NETHER_ORE_PLACE;
			case NETHER_SPROUTS -> Sound.BLOCK_NETHER_SPROUTS_PLACE;
			case NETHER_WART -> Sound.ITEM_NETHER_WART_PLANT;
			// <editor-fold defaultstate="collapsed" desc="netherWood">
			case CRIMSON_BUTTON, CRIMSON_DOOR, CRIMSON_FENCE, CRIMSON_FENCE_GATE, CRIMSON_PLANKS, CRIMSON_PRESSURE_PLATE, CRIMSON_SIGN, CRIMSON_WALL_SIGN, CRIMSON_SLAB, CRIMSON_STAIRS, CRIMSON_TRAPDOOR, WARPED_BUTTON, WARPED_DOOR, WARPED_FENCE, WARPED_FENCE_GATE, WARPED_PLANKS, WARPED_PRESSURE_PLATE, WARPED_SIGN, WARPED_SLAB, WARPED_STAIRS, WARPED_TRAPDOOR, WARPED_WALL_SIGN ->
					// </editor-fold>
					Sound.BLOCK_NETHER_WOOD_PLACE;
			case CRIMSON_HANGING_SIGN, CRIMSON_WALL_HANGING_SIGN, WARPED_HANGING_SIGN, WARPED_WALL_HANGING_SIGN -> Sound.BLOCK_NETHER_WOOD_HANGING_SIGN_PLACE;
			case WARPED_NYLIUM, CRIMSON_NYLIUM -> Sound.BLOCK_NYLIUM_PLACE;
			case PACKED_MUD -> Sound.BLOCK_PACKED_MUD_PLACE;
			case PINK_PETALS -> Sound.BLOCK_PINK_PETALS_PLACE;
			case POINTED_DRIPSTONE -> Sound.BLOCK_POINTED_DRIPSTONE_PLACE;
			case POLISHED_DEEPSLATE_SLAB, POLISHED_DEEPSLATE, POLISHED_DEEPSLATE_STAIRS, POLISHED_DEEPSLATE_WALL ->
					Sound.BLOCK_POLISHED_DEEPSLATE_PLACE;
			case POWDER_SNOW -> Sound.BLOCK_POWDER_SNOW_PLACE;
			case ROOTED_DIRT -> Sound.BLOCK_ROOTED_DIRT_PLACE;
			case CRIMSON_ROOTS, WARPED_ROOTS -> Sound.BLOCK_ROOTS_PLACE;
			// <editor-fold defaultstate="collapsed" desc="sand">
			case BLACK_CONCRETE_POWDER, BLUE_CONCRETE_POWDER, BROWN_CONCRETE_POWDER, CYAN_CONCRETE_POWDER, GRAY_CONCRETE_POWDER, GREEN_CONCRETE_POWDER, LIGHT_BLUE_CONCRETE_POWDER, LIGHT_GRAY_CONCRETE_POWDER, LIME_CONCRETE_POWDER, MAGENTA_CONCRETE_POWDER, ORANGE_CONCRETE_POWDER, PINK_CONCRETE_POWDER, PURPLE_CONCRETE_POWDER, RED_CONCRETE_POWDER, WHITE_CONCRETE_POWDER, YELLOW_CONCRETE_POWDER, SAND, RED_SAND ->
					// </editor-fold>
					Sound.BLOCK_SAND_PLACE;
			case SCAFFOLDING -> Sound.BLOCK_SCAFFOLDING_PLACE;
			case SCULK_SENSOR -> Sound.BLOCK_SCULK_SENSOR_PLACE;
			case SCULK -> Sound.BLOCK_SCULK_PLACE;
			case SCULK_CATALYST -> Sound.BLOCK_SCULK_CATALYST_PLACE;
			case SCULK_SHRIEKER -> Sound.BLOCK_SCULK_SHRIEKER_PLACE;
			case SCULK_VEIN -> Sound.BLOCK_SCULK_VEIN_PLACE;
			case SHROOMLIGHT -> Sound.BLOCK_SHROOMLIGHT_PLACE;
			case SEA_PICKLE, SLIME_BLOCK -> Sound.BLOCK_SLIME_BLOCK_PLACE;
			case SMALL_AMETHYST_BUD -> Sound.BLOCK_SMALL_AMETHYST_BUD_PLACE;
			case SMALL_DRIPLEAF -> Sound.BLOCK_SMALL_DRIPLEAF_PLACE;
			case SNOW, SNOW_BLOCK -> Sound.BLOCK_SNOW_PLACE;
			case SOUL_SAND -> Sound.BLOCK_SOUL_SAND_PLACE;
			case SPONGE -> Sound.BLOCK_GRASS_PLACE; // FIXME: BLOCK_SPONGE_PLACE does not exist. I'll report it later.
			case SPORE_BLOSSOM -> Sound.BLOCK_SPORE_BLOSSOM_PLACE;
			case SUSPICIOUS_GRAVEL -> Sound.BLOCK_SUSPICIOUS_GRAVEL_PLACE;
			case SUSPICIOUS_SAND -> Sound.BLOCK_SUSPICIOUS_SAND_PLACE;
			case SWEET_BERRY_BUSH -> Sound.BLOCK_SWEET_BERRY_BUSH_PLACE;
			case TUFF -> Sound.BLOCK_TUFF_PLACE;
			case VINE -> Sound.BLOCK_VINE_PLACE;
			case WARPED_WART_BLOCK, NETHER_WART_BLOCK -> Sound.BLOCK_WART_BLOCK_PLACE;
			case TWISTING_VINES, TWISTING_VINES_PLANT -> Sound.BLOCK_WEEPING_VINES_PLACE;
			// <editor-fold defaultstate="collapsed" desc="seaPlants">
			case BRAIN_CORAL, BUBBLE_CORAL, FIRE_CORAL, HORN_CORAL, TUBE_CORAL, BRAIN_CORAL_FAN, BRAIN_CORAL_WALL_FAN, BUBBLE_CORAL_FAN, BUBBLE_CORAL_WALL_FAN, FIRE_CORAL_FAN, FIRE_CORAL_WALL_FAN, HORN_CORAL_FAN, HORN_CORAL_WALL_FAN, TUBE_CORAL_FAN, KELP_PLANT, KELP, SEAGRASS, TALL_SEAGRASS ->
					// </editor-fold>
					Sound.BLOCK_WET_GRASS_PLACE;
			case WET_SPONGE -> Sound.BLOCK_WET_GRASS_PLACE; // FIXME: BLOCK_WET_SPONGE_PLACE does not exist. I'll report it later
			// <editor-fold defaultstate="collapsed" desc="wood">
			case ACACIA_BUTTON, ACACIA_DOOR, ACACIA_FENCE, ACACIA_FENCE_GATE, ACACIA_LOG, ACACIA_PLANKS, ACACIA_PRESSURE_PLATE, ACACIA_SIGN, ACACIA_SLAB, ACACIA_STAIRS, ACACIA_TRAPDOOR, ACACIA_WALL_SIGN, ACACIA_WOOD, ATTACHED_MELON_STEM, ATTACHED_PUMPKIN_STEM, BARREL, BEE_NEST, BEEHIVE, BIRCH_BUTTON, BIRCH_DOOR, BIRCH_FENCE, BIRCH_FENCE_GATE, BIRCH_LOG, BIRCH_PLANKS, BIRCH_PRESSURE_PLATE, BIRCH_SIGN, BIRCH_SLAB, BIRCH_STAIRS, BIRCH_TRAPDOOR, BIRCH_WALL_SIGN, BIRCH_WOOD, BLACK_BANNER, BLACK_WALL_BANNER, BLUE_BANNER, BLUE_WALL_BANNER, BROWN_BANNER, BROWN_WALL_BANNER, CYAN_WALL_BANNER, CYAN_BANNER, GRAY_BANNER, GRAY_WALL_BANNER, GREEN_BANNER, GREEN_WALL_BANNER, LIGHT_BLUE_BANNER, LIGHT_BLUE_WALL_BANNER, LIGHT_GRAY_BANNER, LIGHT_GRAY_WALL_BANNER, MAGENTA_BANNER, MAGENTA_WALL_BANNER, LIME_BANNER, LIME_WALL_BANNER, ORANGE_BANNER, ORANGE_WALL_BANNER, PINK_BANNER, PINK_WALL_BANNER, PURPLE_BANNER, RED_BANNER, RED_WALL_BANNER, PURPLE_WALL_BANNER, WHITE_BANNER, WHITE_WALL_BANNER, YELLOW_BANNER, YELLOW_WALL_BANNER, BLACK_BED, BLUE_BED, BROWN_BED, CYAN_BED, GRAY_BED, GREEN_BED, LIME_BED, MAGENTA_BED, ORANGE_BED, PINK_BED, PURPLE_BED, RED_BED, WHITE_BED, YELLOW_BED, BOOKSHELF, BROWN_MUSHROOM_BLOCK, RED_MUSHROOM_BLOCK, CAMPFIRE, CARTOGRAPHY_TABLE, CARVED_PUMPKIN, CHEST, CHORUS_FLOWER, CHORUS_PLANT, COCOA, COMPOSTER, CRAFTING_TABLE, DARK_OAK_BUTTON, DARK_OAK_DOOR, DARK_OAK_FENCE, DARK_OAK_FENCE_GATE, DARK_OAK_LOG, DARK_OAK_PLANKS, DARK_OAK_PRESSURE_PLATE, DARK_OAK_SIGN, DARK_OAK_SLAB, DARK_OAK_STAIRS, DARK_OAK_TRAPDOOR, DARK_OAK_WALL_SIGN, DARK_OAK_WOOD, DAYLIGHT_DETECTOR, END_ROD, FLETCHING_TABLE, JACK_O_LANTERN, JUNGLE_BUTTON, JUNGLE_DOOR, JUNGLE_FENCE, JUNGLE_FENCE_GATE, JUNGLE_LOG, JUNGLE_PLANKS, JUNGLE_PRESSURE_PLATE, JUNGLE_SIGN, JUNGLE_SLAB, JUNGLE_STAIRS, JUNGLE_TRAPDOOR, JUNGLE_WALL_SIGN, JUNGLE_WOOD, LECTERN, LOOM, MANGROVE_BUTTON, MANGROVE_DOOR, MANGROVE_FENCE, MANGROVE_FENCE_GATE, MANGROVE_LOG, MANGROVE_PLANKS, MANGROVE_PRESSURE_PLATE, MANGROVE_SIGN, MANGROVE_SLAB, MANGROVE_STAIRS, MANGROVE_TRAPDOOR, MANGROVE_WALL_SIGN, MANGROVE_WOOD, MELON, MUSHROOM_STEM, NOTE_BLOCK, OAK_BUTTON, OAK_DOOR, OAK_FENCE, OAK_FENCE_GATE, OAK_LOG, OAK_PLANKS, OAK_PRESSURE_PLATE, OAK_SIGN, OAK_SLAB, OAK_STAIRS, OAK_TRAPDOOR, OAK_WALL_SIGN, OAK_WOOD, PUMPKIN, REDSTONE_TORCH, REDSTONE_WALL_TORCH, SMITHING_TABLE, SOUL_CAMPFIRE, SOUL_TORCH, SOUL_WALL_TORCH, SPRUCE_BUTTON, SPRUCE_DOOR, SPRUCE_FENCE, SPRUCE_FENCE_GATE, SPRUCE_LOG, SPRUCE_PLANKS, SPRUCE_PRESSURE_PLATE, SPRUCE_SIGN, SPRUCE_SLAB, SPRUCE_STAIRS, SPRUCE_TRAPDOOR, SPRUCE_WALL_SIGN, SPRUCE_WOOD, STRIPPED_ACACIA_LOG, STRIPPED_ACACIA_WOOD, STRIPPED_BIRCH_LOG, STRIPPED_BIRCH_WOOD, STRIPPED_DARK_OAK_LOG, STRIPPED_DARK_OAK_WOOD, STRIPPED_JUNGLE_LOG, STRIPPED_JUNGLE_WOOD, STRIPPED_MANGROVE_LOG, STRIPPED_MANGROVE_WOOD, STRIPPED_SPRUCE_LOG, STRIPPED_SPRUCE_WOOD, TORCH, TRAPPED_CHEST, TRIPWIRE_HOOK, WALL_TORCH ->
					// </editor-fold>
					Sound.BLOCK_WOOD_PLACE;
			// <editor-fold defaultstate="collapsed" desc="cloth">
			case CAKE, CANDLE_CAKE, BLACK_CANDLE_CAKE, CYAN_CANDLE_CAKE, BLUE_CANDLE_CAKE, BROWN_CANDLE_CAKE, GRAY_CANDLE_CAKE, GREEN_CANDLE_CAKE, LIME_CANDLE_CAKE, MAGENTA_CANDLE_CAKE, ORANGE_CANDLE_CAKE, PINK_CANDLE_CAKE, PURPLE_CANDLE_CAKE, RED_CANDLE_CAKE, WHITE_CANDLE_CAKE, YELLOW_CANDLE_CAKE, BLACK_CARPET, BLUE_CARPET, BROWN_CARPET, CYAN_CARPET, GRAY_CARPET, GREEN_CARPET, LIGHT_BLUE_CARPET, LIGHT_GRAY_CARPET, LIME_CARPET, MAGENTA_CARPET, ORANGE_CARPET, PINK_CARPET, PURPLE_CARPET, RED_CARPET, WHITE_CARPET, YELLOW_CARPET, WHITE_WOOL, BLACK_WOOL, BLUE_WOOL, BROWN_WOOL, CYAN_WOOL, GRAY_WOOL, GREEN_WOOL, LIGHT_BLUE_WOOL, LIGHT_GRAY_WOOL, LIME_WOOL, MAGENTA_WOOL, ORANGE_WOOL, PINK_WOOL, PURPLE_WOOL, RED_WOOL, YELLOW_WOOL, CACTUS, FIRE, SOUL_FIRE ->
					// </editor-fold>
					Sound.BLOCK_WOOL_PLACE;
			default -> Sound.BLOCK_STONE_PLACE;
		};
	}

	static {
		for (Material mat : Material.values()) {
			BY_KEY.put(mat.getKey(), mat);
		}
	}
}
